{"ast":null,"code":"var _jsxFileName = \"/Users/bisharmohamed/Desktop/React-FrontEndBankingApp/src/forms/TransactForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Balance from '../features/Balance';\nimport Card from '../components/Card/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TransactForm(props) {\n  _s();\n\n  const [error, setError] = React.useState(null);\n  const [amount, setAmount] = React.useState('');\n\n  function validate(label, value) {\n    if (!value) {\n      return 'Error: ' + label + ' is required';\n    }\n\n    console.log(value, typeof value, value <= 1000);\n\n    if (label.toLowerCase() === 'amount' && !/^[0-9]+$/.test(value) && value >= 1 && value <= 50000) {\n      console.log(value, typeof value, value <= 50000);\n      return 'Error: Amount should be between 1 and 50000';\n    }\n\n    return true;\n  }\n\n  function handleDeposit() {\n    setError('');\n    let error = {};\n    let inputs = {\n      Amount: amount\n    };\n    Object.keys(inputs).map(key => {\n      let isValid = validate(key, inputs[key]); // inputs[key] return the value of the object inputs based on the key\n\n      if (isValid !== true) {\n        error[key.toLowerCase()] = isValid;\n      }\n    });\n    console.log(error);\n\n    if (Object.keys(error).length > 0) {\n      setError(error);\n      return;\n    }\n\n    props.onSubmit && typeof props.onSubmit === 'function' && props.onSubmit(amount);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      bgcolor: props.bgcolor,\n      header: props.label,\n      body: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [error && error.authError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-danger\",\n          children: error.authError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Balance, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), props.label, \" Amount\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"amount\",\n          className: \"form-control\",\n          id: \"amount\",\n          placeholder: \"Enter amount\",\n          value: amount,\n          onChange: e => setAmount(e.currentTarget.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), error && error.amount && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", error.amount, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 39\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-light\",\n          onClick: handleDeposit,\n          children: props.submitButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TransactForm, \"hA3jzuv9MAIy3/Jc7EdOyaMDeSA=\");\n\n_c = TransactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactForm\");","map":{"version":3,"sources":["/Users/bisharmohamed/Desktop/React-FrontEndBankingApp/src/forms/TransactForm.js"],"names":["React","Balance","Card","TransactForm","props","error","setError","useState","amount","setAmount","validate","label","value","console","log","toLowerCase","test","handleDeposit","inputs","Amount","Object","keys","map","key","isValid","length","onSubmit","bgcolor","authError","e","currentTarget","submitButton"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Balance from '../features/Balance'\nimport Card from '../components/Card/Card'\n\nexport default function TransactForm(props) {\n  const [error, setError] = React.useState(null)\n  const [amount, setAmount] = React.useState('')\n\n  function validate(label, value) {\n    if (!value) {\n      return 'Error: ' + label + ' is required'\n    }\n    console.log(value, typeof value, value <= 1000)\n    if (\n      label.toLowerCase() === 'amount' &&\n      !/^[0-9]+$/.test(value) &&\n      value >= 1 &&\n      value <= 50000\n    ) {\n      console.log(value, typeof value, value <= 50000)\n      return 'Error: Amount should be between 1 and 50000'\n    }\n    return true\n  }\n\n  function handleDeposit() {\n    setError('')\n    let error = {}\n    let inputs = { Amount: amount }\n\n    Object.keys(inputs).map((key) => {\n      let isValid = validate(key, inputs[key]) // inputs[key] return the value of the object inputs based on the key\n      if (isValid !== true) {\n        error[key.toLowerCase()] = isValid\n      }\n    })\n    console.log(error)\n\n    if (Object.keys(error).length > 0) {\n      setError(error)\n      return\n    }\n\n    props.onSubmit &&\n      typeof props.onSubmit === 'function' &&\n      props.onSubmit(amount)\n  }\n\n  return (\n    <div>\n      <Card\n        bgcolor={props.bgcolor}\n        header={props.label}\n        body={\n          <>\n            {error && error.authError && (\n              <div className=\"alert alert-danger\">{error.authError}</div>\n            )}\n            <div>\n              <Balance />\n            </div>\n            <br />\n            {props.label} Amount\n            <br />\n            <input\n              type=\"amount\"\n              className=\"form-control\"\n              id=\"amount\"\n              placeholder=\"Enter amount\"\n              value={amount}\n              onChange={(e) => setAmount(e.currentTarget.value)}\n            />\n            {error && error.amount && <div> {error.amount} </div>}\n            <br />\n            <button\n              type=\"submit\"\n              className=\"btn btn-light\"\n              onClick={handleDeposit}\n            >\n              {props.submitButton}\n            </button>\n          </>\n        }\n      />\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}