{"ast":null,"code":"import _slicedToArray from\"/Users/bisharmohamed/Desktop/react-bank/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from'react';import BankForm from'../../forms/BankForm';import Card from'../../components/Card/Card';import UserContext from'../../features/Context';import CurrentUser from'../../features/CurrentUser';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function Login(props){var ctx=React.useContext(UserContext);var _React$useState=React.useState(null),_React$useState2=_slicedToArray(_React$useState,2),error=_React$useState2[0],setError=_React$useState2[1];var _React$useState3=React.useState(ctx.loggedInUser!==undefined),_React$useState4=_slicedToArray(_React$useState3,2),success=_React$useState4[0],setSuccess=_React$useState4[1];function handleSubmit(name,email,password){setError('');var userId;var user=ctx.users.find(function(el,i){userId=i;return el.email===email;});if(!user||user&&user.password!==password){setError('Invalid Credentials');}console.log(userId,user);// ctx.loggedInUser = userId;\nprops.setLoggedInUser(userId);setSuccess(true);// if (userId == 0) {\n//   props.history.push(\"/alldata/\");\n// } else {\n//   props.history.push(\"/deposit/\");\n// }\nreturn true;}// function clearForm() {\n//   setSuccess(false);\n// }\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"login container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-sm-8\",children:/*#__PURE__*/_jsx(Card,{bgcolor:\"info\",header:\"Login\",hideCurrentUser:true,children:success?/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"h5\",{children:[\"Successfully Logged In \",/*#__PURE__*/_jsx(CurrentUser,{})]})}):/*#__PURE__*/_jsx(BankForm,{onSubmit:handleSubmit,isName:false})})})})});}","map":{"version":3,"sources":["/Users/bisharmohamed/Desktop/react-bank/src/container/Login/Login.js"],"names":["React","BankForm","Card","UserContext","CurrentUser","Login","props","ctx","useContext","useState","error","setError","loggedInUser","undefined","success","setSuccess","handleSubmit","name","email","password","userId","user","users","find","el","i","console","log","setLoggedInUser"],"mappings":"6HAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,sBAArB,CACA,MAAOC,CAAAA,IAAP,KAAiB,4BAAjB,CACA,MAAOC,CAAAA,WAAP,KAAwB,wBAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,4BAAxB,C,6IAEA,cAAe,SAASC,CAAAA,KAAT,CAAeC,KAAf,CAAsB,CACnC,GAAMC,CAAAA,GAAG,CAAGP,KAAK,CAACQ,UAAN,CAAiBL,WAAjB,CAAZ,CACA,oBAA0BH,KAAK,CAACS,QAAN,CAAe,IAAf,CAA1B,oDAAOC,KAAP,qBAAcC,QAAd,qBACA,qBAA8BX,KAAK,CAACS,QAAN,CAAeF,GAAG,CAACK,YAAJ,GAAqBC,SAApC,CAA9B,qDAAOC,OAAP,qBAAgBC,UAAhB,qBAEA,QAASC,CAAAA,YAAT,CAAsBC,IAAtB,CAA4BC,KAA5B,CAAmCC,QAAnC,CAA6C,CAC3CR,QAAQ,CAAC,EAAD,CAAR,CACA,GAAIS,CAAAA,MAAJ,CACA,GAAIC,CAAAA,IAAI,CAAGd,GAAG,CAACe,KAAJ,CAAUC,IAAV,CAAe,SAACC,EAAD,CAAKC,CAAL,CAAW,CACnCL,MAAM,CAAGK,CAAT,CACA,MAAOD,CAAAA,EAAE,CAACN,KAAH,GAAaA,KAApB,CACD,CAHU,CAAX,CAIA,GAAI,CAACG,IAAD,EAAUA,IAAI,EAAIA,IAAI,CAACF,QAAL,GAAkBA,QAAxC,CAAmD,CACjDR,QAAQ,CAAC,qBAAD,CAAR,CACD,CACDe,OAAO,CAACC,GAAR,CAAYP,MAAZ,CAAoBC,IAApB,EACA;AACAf,KAAK,CAACsB,eAAN,CAAsBR,MAAtB,EACAL,UAAU,CAAC,IAAD,CAAV,CACA;AACA;AACA;AACA;AACA;AACA,MAAO,KAAP,CACD,CAED;AACA;AACA;AAEA,mBACE,YAAK,SAAS,CAAC,iBAAf,uBACE,YAAK,SAAS,CAAC,KAAf,uBACE,YAAK,SAAS,CAAC,UAAf,uBACE,KAAC,IAAD,EAAM,OAAO,CAAC,MAAd,CAAqB,MAAM,CAAC,OAA5B,CAAoC,eAAe,CAAE,IAArD,UACGD,OAAO,cACN,sCACE,6DACyB,KAAC,WAAD,IADzB,GADF,EADM,cAON,KAAC,QAAD,EAAU,QAAQ,CAAEE,YAApB,CAAkC,MAAM,CAAE,KAA1C,EARJ,EADF,EADF,EADF,EADF,CAmBD","sourcesContent":["import React from 'react'\nimport BankForm from '../../forms/BankForm'\nimport Card from '../../components/Card/Card'\nimport UserContext from '../../features/Context'\nimport CurrentUser from '../../features/CurrentUser'\n\nexport default function Login(props) {\n  const ctx = React.useContext(UserContext)\n  const [error, setError] = React.useState(null)\n  const [success, setSuccess] = React.useState(ctx.loggedInUser !== undefined)\n\n  function handleSubmit(name, email, password) {\n    setError('')\n    let userId\n    let user = ctx.users.find((el, i) => {\n      userId = i\n      return el.email === email\n    })\n    if (!user || (user && user.password !== password)) {\n      setError('Invalid Credentials')\n    }\n    console.log(userId, user)\n    // ctx.loggedInUser = userId;\n    props.setLoggedInUser(userId)\n    setSuccess(true)\n    // if (userId == 0) {\n    //   props.history.push(\"/alldata/\");\n    // } else {\n    //   props.history.push(\"/deposit/\");\n    // }\n    return true\n  }\n\n  // function clearForm() {\n  //   setSuccess(false);\n  // }\n\n  return (\n    <div className=\"login container\">\n      <div className=\"row\">\n        <div className=\"col-sm-8\">\n          <Card bgcolor=\"info\" header=\"Login\" hideCurrentUser={true}>\n            {success ? (\n              <>\n                <h5>\n                  Successfully Logged In <CurrentUser />\n                </h5>\n              </>\n            ) : (\n              <BankForm onSubmit={handleSubmit} isName={false} />\n            )}\n          </Card>\n        </div>\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}