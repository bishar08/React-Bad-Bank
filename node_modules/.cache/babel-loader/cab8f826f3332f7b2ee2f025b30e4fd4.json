{"ast":null,"code":"var _jsxFileName = \"/Users/bisharmohamed/Desktop/React-FrontEndBankingApp/src/forms/BankForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Card from \"../components/Card/Card\";\nimport UserContext from \"../features/Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function BankForm(props) {\n  _s();\n\n  const [error, setError] = React.useState(props.error || null);\n  const [name, setName] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n\n  function validate(label, value) {\n    if (!value) {\n      return \"Error: \" + label + \" is required\";\n    }\n\n    if (label.toLowerCase() === \"name\" && !/^[a-zA-Z ]*$/.test(value)) {\n      return \"Error: Name should be using characters\";\n    }\n\n    if (label.toLowerCase() === \"email\" && !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value)) {\n      return \"Error: Email should be using @ format\";\n    }\n\n    if (label.toLowerCase() === \"password\" && !/^[a-z0-9]+$/i.test(value) && value.length >= 8 && value.length <= 13) {\n      return \"Error: Passwd should be using alphanumeric, min 8, max 13\";\n    }\n\n    return true;\n  }\n\n  function handlSubmit() {\n    let error = {};\n    let inputs = {\n      Email: email,\n      Password: password\n    };\n    if (props.isName !== false) inputs[\"Name\"] = name;\n    Object.keys(inputs).map(key => {\n      let isValid = validate(key, inputs[key]); // inputs[key] return the value of the object inputs based on the key\n\n      if (isValid !== true) {\n        error[key.toLowerCase()] = isValid;\n      }\n    });\n    console.log(error);\n\n    if (Object.keys(error).length > 0) {\n      setError(error);\n      return;\n    }\n\n    if (props.onSubmit) props.onSubmit(name, email, password);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && error.authError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: error.authError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this), props.isName !== false && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"Name\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"input\",\n        className: \"form-control\",\n        id: \"name\",\n        placeholder: \"Enter name\",\n        value: name,\n        onChange: e => setName(e.currentTarget.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), error && error.name && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", error.name, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), \"Email address\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"input\",\n      className: \"form-control\",\n      id: \"email\",\n      placeholder: \"Enter email\",\n      value: email,\n      onChange: e => setEmail(e.currentTarget.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), error && error.email && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", error.email, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), \"Password\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      id: \"password\",\n      placeholder: \"Enter password\",\n      value: password,\n      onChange: e => setPassword(e.currentTarget.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), error && error.password && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", error.password, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-light\",\n      onClick: handlSubmit,\n      children: props.submitButton || \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BankForm, \"BvnPNMMtjORoqYuMi+xu5NNakKk=\");\n\n_c = BankForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BankForm\");","map":{"version":3,"sources":["/Users/bisharmohamed/Desktop/React-FrontEndBankingApp/src/forms/BankForm.js"],"names":["React","Card","UserContext","BankForm","props","error","setError","useState","name","setName","email","setEmail","password","setPassword","validate","label","value","toLowerCase","test","length","handlSubmit","inputs","Email","Password","isName","Object","keys","map","key","isValid","console","log","onSubmit","authError","e","currentTarget","submitButton"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Card from \"../components/Card/Card\";\nimport UserContext from \"../features/Context\";\n\nexport default function BankForm(props) {\n  const [error, setError] = React.useState(props.error || null);\n  const [name, setName] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n\n  function validate(label, value) {\n    if (!value) {\n      return \"Error: \" + label + \" is required\";\n    }\n    if (label.toLowerCase() === \"name\" && !/^[a-zA-Z ]*$/.test(value)) {\n      return \"Error: Name should be using characters\";\n    }\n    if (\n      label.toLowerCase() === \"email\" &&\n      !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value)\n    ) {\n      return \"Error: Email should be using @ format\";\n    }\n    if (\n      label.toLowerCase() === \"password\" &&\n      !/^[a-z0-9]+$/i.test(value) &&\n      value.length >= 8 &&\n      value.length <= 13\n    ) {\n      return \"Error: Passwd should be using alphanumeric, min 8, max 13\";\n    }\n    return true;\n  }\n\n  function handlSubmit() {\n    let error = {};\n    let inputs = { Email: email, Password: password };\n    if (props.isName !== false) inputs[\"Name\"] = name;\n\n    Object.keys(inputs).map((key) => {\n      let isValid = validate(key, inputs[key]); // inputs[key] return the value of the object inputs based on the key\n      if (isValid !== true) {\n        error[key.toLowerCase()] = isValid;\n      }\n    });\n    console.log(error);\n\n    if (Object.keys(error).length > 0) {\n      setError(error);\n      return;\n    }\n    if (props.onSubmit) props.onSubmit(name, email, password);\n  }\n\n  return (\n    <div>\n        {error && error.authError && (\n          <div className=\"alert alert-danger\">{error.authError}</div>\n        )}\n        {props.isName !== false && (\n          <>\n            Name\n            <br />\n            <input\n              type=\"input\"\n              className=\"form-control\"\n              id=\"name\"\n              placeholder=\"Enter name\"\n              value={name}\n              onChange={(e) => setName(e.currentTarget.value)}\n            />\n            {error && error.name && <div> {error.name} </div>}\n            <br />\n          </>\n        )}\n        Email address\n        <br />\n        <input\n          type=\"input\"\n          className=\"form-control\"\n          id=\"email\"\n          placeholder=\"Enter email\"\n          value={email}\n          onChange={(e) => setEmail(e.currentTarget.value)}\n        />\n        {error && error.email && <div> {error.email} </div>}\n        <br />\n        Password\n        <br />\n        <input\n          type=\"password\"\n          className=\"form-control\"\n          id=\"password\"\n          placeholder=\"Enter password\"\n          value={password}\n          onChange={(e) => setPassword(e.currentTarget.value)}\n        />\n        {error && error.password && <div> {error.password} </div>}\n        <br />\n        <button type=\"submit\" className=\"btn btn-light\" onClick={handlSubmit}>\n          {props.submitButton || \"Submit\"}\n        </button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}